<?php


namespace backend\controllers;


use backend\models\Contacts;
use backend\models\OrdersContact;
use backend\models\OrdersContactSearch;
use common\helper\Helper;
use yii\helpers\ArrayHelper;
use yii\web\Response;

class AjaxReportController extends BaseController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        \Yii::$app->response->format = Response::FORMAT_JSON;
    }

    public function actionSales()
    {

        $query = Contacts::find()
            ->addSelect([
                'SUM(IF( contacts.status != "duplicate", 1, 0)) as C3',
                'SUM(IF( contacts.status = "ok", 1, 0 )) as C8',
                'SUM(IF( contacts.status = "cancel", 1, 0 )) as C6',
                'SUM(IF( contacts.status = "callback" OR contacts.status = "pending", 1, 0 )) as C7',
                'SUM(IF( contacts.status = "number_fail", 1, 0 )) as C4',
                'SUM(IF( contacts.status = "new", 1, 0 )) as C0',
                'FROM_UNIXTIME(contacts.updated_at, \'%d/%m/%Y\') day',
            ])->groupBy('day');

        if (\Yii::$app->request->isPost) {
            $filter = \Yii::$app->request->post();
            $marketer = ArrayHelper::getValue($filter, 'marketer', []);
            $product = ArrayHelper::getValue($filter, 'product', []);
            $source = ArrayHelper::getValue($filter, 'source', []);
            $time_register = ArrayHelper::getValue($filter, 'time_register', '');
            if ($time_register) {
                $time_register = explode(' - ', $time_register);
                $startTime = Helper::timer($time_register[0]);
                $endTime = Helper::timer($time_register[1]);
                $query->where(['between', 'register_time', $startTime, $endTime]);
            } else {
                $query->where('register_time <= NOW() AND register_time >= DATE_SUB(register_time, INTERVAL 7 DAY)');
            }
            if ($source) {
                $query->filterWhere(['IN', 'type', $source]);
            }
            if ($product) {
                $query->innerJoin('products', 'products.partner_name = contacts.partner');
                $query->filterWhere(['IN', 'sku', $product]);
            }
        }
        return $query->asArray()->all();
    }

}