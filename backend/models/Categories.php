<?php

namespace backend\models;

use common\helper\Helper;
use common\models\User;
use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "categories".
 *
 * @property int $id
 * @property string $name
 * @property string|null $country
 * @property int $partner_id
 * @property string|null $description
 * @property int $created_at
 * @property int $updated_at
 */
class Categories extends \common\models\BaseModel
{
    /**
     * @var mixed|null
     */
    private $partner;
    public $displayname;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'categories';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'partner_id', 'country'], 'required'],
            [['partner_id', 'created_at', 'updated_at'], 'integer'],
            [['name', 'country', 'description'], 'string', 'max' => 255],
            ['name', 'unique']
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Tên loại sản phẩm',
            'country' => 'Thị trường',
            'partner_id' => 'Đối tác',
            'description' => 'Mô tả',
            'created_at' => 'Ngày tạo',
            'updated_at' => 'Updated At',
        ];
    }

    public function getPartner()
    {
        return $this->hasOne(UserModel::className(), ['id' => 'partner_id']);
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    public function beforeSave($insert)
    {
        if ($insert) {
            $this->generateName();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function find()
    {
        if (Yii::$app instanceof \yii\console\Application) {
            return parent::find();
        }
        $query = parent::find()->where(['{{categories}}.country' => Yii::$app->cache->get('country')]);
        if (Helper::isRole(UserRole::ROLE_PARTNER)) {
            $query->andWhere(['{{categories}}.partner_id' => Yii::$app->user->getId()]);
        }
        return $query;
    }

    private function generateName()
    {
        $partner = UserModel::findOne($this->partner_id);
        if (!$partner) {
            $this->addError('partner_id', 'Không tìm thấy đối tác!');
            return false;
        }
        $this->name = $this->country . '-' . $partner->username . '-' . $this->name;

    }

    static function LISTS($from = 'id')
    {
        $categories = Categories::find()->addSelect(['id', 'country', 'name', 'partner_id'])->all();
        return ArrayHelper::map($categories, $from, function ($item) {
            $partner = UserModel::findOne($item->partner_id);

            return $item->name;
        });
    }
}
